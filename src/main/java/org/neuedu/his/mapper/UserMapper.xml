<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.neuedu.his.mapper.UserMapper">
    <resultMap id="BaseResultMap" type="org.neuedu.his.model.User">
        <id column="ID" property="id" jdbcType="INTEGER"/>
        <result column="UserName" property="username" jdbcType="VARCHAR"/>
        <result column="Password" property="password" jdbcType="VARCHAR"/>
        <result column="RealName" property="realname" jdbcType="VARCHAR"/>
        <result column="UseType" property="usetype" jdbcType="INTEGER"/>
        <result column="DocTitleID" property="doctitleid" jdbcType="INTEGER"/>
        <result column="IsScheduling" property="isscheduling" jdbcType="CHAR"/>
        <result column="DeptID" property="deptid" jdbcType="INTEGER"/>
        <result column="RegistLeID" property="registleid" jdbcType="INTEGER"/>
        <result column="DelMark" property="delmark" jdbcType="INTEGER"/>
    </resultMap>
    <sql id="Base_Column_List">
    ID, UserName, Password, RealName, UseType, DocTitleID, IsScheduling, DeptID, RegistLeID, 
    DelMark
  </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from user
        where ID = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where ID = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="org.neuedu.his.model.User">
    insert into user (ID, UserName, Password, 
      RealName, UseType, DocTitleID, 
      IsScheduling, DeptID, RegistLeID, 
      DelMark)
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{realname,jdbcType=VARCHAR}, #{usetype,jdbcType=INTEGER}, #{doctitleid,jdbcType=INTEGER}, 
      #{isscheduling,jdbcType=CHAR}, #{deptid,jdbcType=INTEGER}, #{registleid,jdbcType=INTEGER}, 
      #{delmark,jdbcType=INTEGER})
  </insert>
    <insert id="insertSelective" parameterType="org.neuedu.his.model.User">
        insert into user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                ID,
            </if>
            <if test="username != null">
                UserName,
            </if>
            <if test="password != null">
                Password,
            </if>
            <if test="realname != null">
                RealName,
            </if>
            <if test="usetype != null">
                UseType,
            </if>
            <if test="doctitleid != null">
                DocTitleID,
            </if>
            <if test="isscheduling != null">
                IsScheduling,
            </if>
            <if test="deptid != null">
                DeptID,
            </if>
            <if test="registleid != null">
                RegistLeID,
            </if>
            <if test="delmark != null">
                DelMark,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="username != null">
                #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="realname != null">
                #{realname,jdbcType=VARCHAR},
            </if>
            <if test="usetype != null">
                #{usetype,jdbcType=INTEGER},
            </if>
            <if test="doctitleid != null">
                #{doctitleid,jdbcType=INTEGER},
            </if>
            <if test="isscheduling != null">
                #{isscheduling,jdbcType=CHAR},
            </if>
            <if test="deptid != null">
                #{deptid,jdbcType=INTEGER},
            </if>
            <if test="registleid != null">
                #{registleid,jdbcType=INTEGER},
            </if>
            <if test="delmark != null">
                #{delmark,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="org.neuedu.his.model.User">
        update user
        <set>
            <if test="username != null">
                UserName = #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                Password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="realname != null">
                RealName = #{realname,jdbcType=VARCHAR},
            </if>
            <if test="usetype != null">
                UseType = #{usetype,jdbcType=INTEGER},
            </if>
            <if test="doctitleid != null">
                DocTitleID = #{doctitleid,jdbcType=INTEGER},
            </if>
            <if test="isscheduling != null">
                IsScheduling = #{isscheduling,jdbcType=CHAR},
            </if>
            <if test="deptid != null">
                DeptID = #{deptid,jdbcType=INTEGER},
            </if>
            <if test="registleid != null">
                RegistLeID = #{registleid,jdbcType=INTEGER},
            </if>
            <if test="delmark != null">
                DelMark = #{delmark,jdbcType=INTEGER},
            </if>
        </set>
        where ID = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="org.neuedu.his.model.User">
    update user
    set UserName = #{username,jdbcType=VARCHAR},
      Password = #{password,jdbcType=VARCHAR},
      RealName = #{realname,jdbcType=VARCHAR},
      UseType = #{usetype,jdbcType=INTEGER},
      DocTitleID = #{doctitleid,jdbcType=INTEGER},
      IsScheduling = #{isscheduling,jdbcType=CHAR},
      DeptID = #{deptid,jdbcType=INTEGER},
      RegistLeID = #{registleid,jdbcType=INTEGER},
      DelMark = #{delmark,jdbcType=INTEGER}
    where ID = #{id,jdbcType=INTEGER}
  </update>
    <select id="getUserByNameAndPass" resultType="org.neuedu.his.model.User">
    select *
    from `user`
    where username = #{username} and password = #{password}
  </select>
    <select id="getUserByDeptAndRegist" resultType="org.neuedu.his.model.User">
        select *
        from `user`
        <where>
            isScheduling = '是'
            <if test="dept != null and dept != ''">
                and deptid = #{dept}
            </if>
            <if test="regist != null and regist != ''">
                and registleid = #{regist}
            </if>
        </where>
    </select>

    <!--  List<User> enabledScheduling();-->
    <select id="enabledScheduling" resultType="org.neuedu.his.model.User">
        select *
        from user
        <where>
            isScheduling = '是'
            <if test="department != null and department != ''">
                and deptid = #{department}
            </if>
            <if test="registLevel != null and registLevel != ''">
                and registleid = #{registLevel}
            </if>
        </where>
    </select>
    <!-- List<User> searchUsers(String keywords);-->
    <resultMap id="searchUsers" type="org.neuedu.his.model.User" extends="BaseResultMap">
        <association property="constantitem" javaType="org.neuedu.his.model.Constantitem">
            <id column="cid" property="id"></id>
            <result column="constantname" property="ConstantName"></result>
        </association>
        <association property="department" javaType="org.neuedu.his.model.Department">
            <id column="did" property="id"></id>
            <result column="deptname" property="deptname"></result>
        </association>
        <association property="registLevel" javaType="org.neuedu.his.model.RegistLevel">
            <id column="rid" property="id"></id>
            <result column="registname" property="registname"></result>
        </association>
    </resultMap>
    <select id="searchUsers" resultMap="searchUsers">
        select u.id as id,username,DocTitleID,DeptID,IsScheduling,RegistLeID,password,realname,u.usetype,c.constantname,c.id as cid,d.deptname,d.id as did,r.id as rid,r.registname
        from `user` u
        join constantitem c
        on c.id = doctitleid
        join registlevel r
        on r.id = u.registleid
        join department d
        on d.id=u.deptid
        <where>
            u.delmark=1
            <if test="keywords != null and keywords != ''">
                and  username like concat('%',#{keywords},'%')
                or realname like concat('%',#{keywords},'%')
            </if>
        </where>
    </select>
    <!--Integer delUserById(Integer id);-->
    <update id="delUserById">
    update user
    set delmark=0
    where id=#{id}
  </update>
</mapper>