<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.neuedu.his.mapper.SchedulingMapper" >
  <resultMap id="BaseResultMap" type="org.neuedu.his.model.Scheduling" >
    <id column="ID" property="id" jdbcType="INTEGER" />
    <result column="SchedDate" property="scheddate" jdbcType="DATE" />
    <result column="DeptID" property="deptid" jdbcType="INTEGER" />
    <result column="UserID" property="userid" jdbcType="INTEGER" />
    <result column="Noon" property="noon" jdbcType="CHAR" />
    <result column="RuleID" property="ruleid" jdbcType="INTEGER" />
    <result column="DelMark" property="delmark" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    ID, SchedDate, DeptID, UserID, Noon, RuleID, DelMark
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from scheduling
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from scheduling
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="org.neuedu.his.model.Scheduling" >
    insert into scheduling (ID, SchedDate, DeptID, 
      UserID, Noon, RuleID, 
      DelMark)
    values (#{id,jdbcType=INTEGER}, #{scheddate,jdbcType=DATE}, #{deptid,jdbcType=INTEGER}, 
      #{userid,jdbcType=INTEGER}, #{noon,jdbcType=CHAR}, #{ruleid,jdbcType=INTEGER}, 
      #{delmark,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="org.neuedu.his.model.Scheduling" >
    insert into scheduling
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="scheddate != null" >
        SchedDate,
      </if>
      <if test="deptid != null" >
        DeptID,
      </if>
      <if test="userid != null" >
        UserID,
      </if>
      <if test="noon != null" >
        Noon,
      </if>
      <if test="ruleid != null" >
        RuleID,
      </if>
      <if test="delmark != null" >
        DelMark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="scheddate != null" >
        #{scheddate,jdbcType=DATE},
      </if>
      <if test="deptid != null" >
        #{deptid,jdbcType=INTEGER},
      </if>
      <if test="userid != null" >
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="noon != null" >
        #{noon,jdbcType=CHAR},
      </if>
      <if test="ruleid != null" >
        #{ruleid,jdbcType=INTEGER},
      </if>
      <if test="delmark != null" >
        #{delmark,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.neuedu.his.model.Scheduling" >
    update scheduling
    <set >
      <if test="scheddate != null" >
        SchedDate = #{scheddate,jdbcType=DATE},
      </if>
      <if test="deptid != null" >
        DeptID = #{deptid,jdbcType=INTEGER},
      </if>
      <if test="userid != null" >
        UserID = #{userid,jdbcType=INTEGER},
      </if>
      <if test="noon != null" >
        Noon = #{noon,jdbcType=CHAR},
      </if>
      <if test="ruleid != null" >
        RuleID = #{ruleid,jdbcType=INTEGER},
      </if>
      <if test="delmark != null" >
        DelMark = #{delmark,jdbcType=INTEGER},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.neuedu.his.model.Scheduling" >
    update scheduling
    set SchedDate = #{scheddate,jdbcType=DATE},
      DeptID = #{deptid,jdbcType=INTEGER},
      UserID = #{userid,jdbcType=INTEGER},
      Noon = #{noon,jdbcType=CHAR},
      RuleID = #{ruleid,jdbcType=INTEGER},
      DelMark = #{delmark,jdbcType=INTEGER}
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <select id="getSchedulingByDate" resultType="org.neuedu.his.model.Scheduling">
    select s.id,scheddate,noon,deptname,realname,registname,registquota
    from `scheduling` s
    join `department` d
    on s.DeptID = d.ID
    join `user` u
    on s.UserID = u.ID
    join `registlevel` r
    on u.RegistLeID = r.ID
    <where>
      <if test="startDate != null and startDate != '' and endDate != null and endDate != ''">
        scheddate BETWEEN #{startDate} and #{endDate}
      </if>
    </where>
    order by scheddate asc ,realname,noon
  </select>

<!--  <select id="getNoon" resultType="org.neuedu.his.model.Scheduling">-->
<!--    select *-->
<!--    from `scheduling`-->
<!--    where scheddate = #{visitdate}-->
<!--  </select>-->

  <resultMap id="getUserByDeptIdAndLevelAndDate" type="org.neuedu.his.model.Scheduling">
    <id column="sid" property="id"></id>
    <result column="noon" property="noon"></result>
    <association property="user" javaType="org.neuedu.his.model.User">
      <id column="uid" property="id"></id>
      <result column="realname" property="realname"></result>
    </association>
    <association property="dept" javaType="org.neuedu.his.model.Department">
      <id column="did" property="id"></id>
      <result column="deptname" property="deptname"></result>
    </association>
  </resultMap>
  <select id="getUserByDeptIdAndLevelAndDate" resultMap="getUserByDeptIdAndLevelAndDate">
    select s.id sid,u.id uid,realname,noon,d.id did,deptname
    from `user` u
    join `scheduling` s
    on u.id = s.userid
    join `department` d
    on u.deptid = d.id
    <where>
      <if test="deptid != null and deptid != ''">
        and u.deptid = #{deptid}
      </if>
      <if test="registleid != null and registleid != ''">
        and registleid = #{registleid}
      </if>
      <if test="scheddate != null and scheddate != ''">
        and scheddate = #{scheddate}
      </if>
      <if test="noon != null and noon != '' ">
        and noon = #{noon}
      </if>
    </where>
  </select>

</mapper>